{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport bunyan from 'bunyan';\nimport cluster from 'cluster';\nimport env from './env';\nimport expressApp from './express-app';\nimport http from 'http';\nimport makeLocalHandle from './handlers/local';\nimport makeProxyHandle from './handlers/proxy';\nimport os from 'os';\nimport path from 'path';\nimport pkg from '../package.json';\n\nlet heapdump;\nif (env.heartbeat.memThresholdRss && env.log.toDir) {\n  try {\n    // eslint-disable-next-line dependencies/no-unresolved, import/no-extraneous-dependencies\n    heapdump = require('heapdump');\n  } catch (_err) {\n  }\n}\nlet workerId = _.get(cluster, 'worker.id', 'M');\nlet httpServer;\n\n// LOG\n\nlet logStreams = [{\n  name: 'stdout',\n  stream: process.stdout,\n  level: _.defaultTo(env.log.level, 'TRACE')\n}];\n\nif (env.log.toDir) {\n  logStreams.push({\n    name: 'default',\n    path: path.join(env.log.toDir, `${pkg.name}.log`),\n    period: '1d',\n    count: 7,\n    level: env.log.level\n  });\n}\n\nlet log = bunyan.createLogger({\n  name: pkg.name,\n  src: true,\n  serializers: undefined,\n  streams: logStreams\n});\n\nif (!cluster.isMaster) {\n  log = log.child({\n    tagServerWorker: true,\n    workerId\n  });\n}\n\n// EVENT HANDLERS\n\nlet writeHeapSnapshot = function(logObj) {\n  if (!heapdump) {\n    return;\n  }\n\n  let filename = `${pkg.name}.${workerId}.uncaughtException.heapsnapshot`;\n  logObj.heapsnapshot = {\n    filename\n  };\n  heapdump.writeSnapshot(`${env.log.toDir}/${filename}`);\n};\n\nlet maybeWriteHeapSnapshot = function(logObj) {\n  if (!heapdump) {\n    return;\n  }\n\n  let thresholdRss = env.heartbeat.memThresholdRss;\n  let currentRss;\n  currentRss = logObj.process.memoryUsage.rss / (1024 * 1024);\n  if (currentRss <= thresholdRss) {\n    return false;\n  }\n  let filename = `${pkg.name}.${workerId}.${thresholdRss}MB.heapsnapshot`;\n  logObj.heapsnapshot = {\n    currentRss,\n    thresholdRss,\n    filename\n  };\n  heapdump.writeSnapshot(`${env.log.toDir}/${filename}`);\n  thresholdRss = thresholdRss + 25;\n  return true;\n};\n\nlet onUncaughtException = function(err) {\n  let exceptionLog = {\n    tag_uncaught_exception: true,\n    err: {\n      code: err.code,\n      message: err.message,\n      stack: err.stack\n    }\n  };\n\n  console.error(err);\n  console.error(err.stack);\n  try {\n    writeHeapSnapshot(exceptionLog);\n    log.fatal(exceptionLog, 'Uncaught exception');\n  } catch (e) {\n    console.error(e);\n  }\n\n  if (cluster.isMaster || !httpServer) {\n    // eslint-disable-next-line no-process-exit\n    process.exit(1);\n  } else {\n    httpServer.close(function() {\n    // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    });\n    setTimeout(function() {\n      log.error('HTTP server is stalling upon closing down. Forcefully terminating.'); // eslint-disable-line max-len\n    // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    });\n  }\n};\n\nlet onHeartbeat = (function() {\n  return function() {\n    let level = 'info';\n    let heartbeatLog = {\n      tag_server_heartbeat: true,\n      process: {\n        memoryUsage: process.memoryUsage(),\n        uptime: process.uptime()\n      },\n      os: {\n        loadavg: os.loadavg(),\n        totalmem: os.totalmem(),\n        freemem: os.freemem()\n      }\n    };\n\n    if (maybeWriteHeapSnapshot(heartbeatLog)) {\n      level = 'warn';\n    }\n\n    log[level](heartbeatLog, 'Heartbeat');\n  };\n})();\n\n// MAIN\n\nlet mainWorker = async function() {\n  process.on('uncaughtException', onUncaughtException);\n\n  let app = expressApp.create({\n    address: env.address,\n    port: env.port,\n    env,\n    log\n  });\n\n  // [{awsFunctionName, isProd, locations, mainFun, pkg}]\n  let lambdas = await env.hooks.findLambdas({env});\n\n  _.forEach(lambdas, function(lambda) {\n    let makeHandle = makeProxyHandle;\n\n    makeHandle = makeLocalHandle;\n    if (lambda.isProd) {\n      makeHandle = makeProxyHandle;\n    }\n    lambda.handle = makeHandle({app, lambda});\n  });\n\n  await expressApp.loadLambdas({app, lambdas});\n\n  http.globalAgent.maxSockets = Infinity;\n  httpServer = http.createServer(app);\n\n  httpServer.listen(env.port, env.address);\n\n  if (!cluster.isMaster) {\n    return;\n  }\n\n  log.info({\n    tag_server_event: 'listening'\n  }, 'Non-worker listening');\n\n  if (env.heartbeat.interval > 1) {\n    setInterval(onHeartbeat, env.heartbeat.interval * 60 * 1000);\n  }\n};\n\nlet onSimpleEvent = function(event, worker) {\n  let level = 'info';\n  // eslint-disable-next-line fp/no-arguments\n  let args = Array.prototype.slice.call(arguments, 1);\n\n  if (worker instanceof cluster.Worker) {\n    args.shift();\n  }\n\n  args = args.length ? ` ${JSON.stringify(args)}` : '';\n\n  if (event === 'error') {\n    level = 'error';\n  }\n  // eslint-disable-next-line fp/no-arguments\n  if (event === 'exit' && arguments[0] !== 0) {\n    level = 'error';\n  }\n\n  log[level]({\n    tagServerWorker: true,\n    tag_server_event: event,\n    workerId: worker.id\n  }, `Worker ${event}${args}`);\n};\n\nlet mainMaster = function() {\n  let startupLog = {\n    tag_server_event: 'starting',\n    env\n  };\n\n  // Exit when pipe is closed\n  if (env.isProd) {\n    process.stdin.resume();\n    process.stdin.on('close', function() {\n      // eslint-disable-next-line fp/no-arguments\n      _.curry(onSimpleEvent)('stdin_close')(arguments);\n    // eslint-disable-next-line no-process-exit\n      process.exit(0);\n    });\n  }\n\n  process.on('uncaughtException', onUncaughtException);\n  cluster\n    .on('fork', _.curry(onSimpleEvent)('fork'))\n    .on('online', _.curry(onSimpleEvent)('online'))\n    .on('listening', _.curry(onSimpleEvent)('listening'))\n    .on('disconnect', _.curry(onSimpleEvent)('disconnect'))\n    .on('exit', _.curry(onSimpleEvent)('exit'))\n    .on('exit', function(worker, code, _signal) {\n      if (code === 0) {\n        return;\n      }\n\n      // Replace event\n      let event = 'replace';\n      let newWorker = cluster.fork();\n      let args = ` [${newWorker.id}]`;\n\n      log.info({\n        tagServerWorker: true,\n        tag_server_event: event,\n        workerId: worker.id\n      }, `Worker ${event}${args}`);\n    });\n\n  if (env.isProd) {\n    startupLog.process = {\n      arch: process.arch,\n      env: process.env,\n      memoryUsage: process.memoryUsage(),\n      platform: process.platform,\n      versions: process.versions,\n      uptime: process.uptime()\n    };\n    startupLog.process.env.NODE_PATH =\n      _.compact(_.uniq(_.split(startupLog.process.env.NODE_PATH, ':')));\n\n    startupLog.os = {\n      arch: os.arch(),\n      cpus: os.cpus(),\n      freemem: os.freemem(),\n      hostame: os.hostname(),\n      loadavg: os.loadavg(),\n      networkInterfaces: os.networkInterfaces(),\n      platform: os.platform(),\n      release: os.release(),\n      totalmem: os.totalmem(),\n      type: os.type(),\n      uptime: os.uptime()\n    };\n  }\n\n  log.trace(startupLog, 'Starting');\n\n  _.forEach(_.range(0, env.forkCount), function() {\n    cluster.fork();\n  });\n};\n\n// RUN\n\nlet run = function() {\n  if (cluster.isMaster) {\n    console.log(`PID=${process.pid}`);\n    console.log(`PORT=${env.port}`);\n    console.log('---');\n\n    if (!env.isProd) {\n      console.log(`Started server on http://${env.address}:${env.port}`);\n      console.log('Press CTRL-C to stop');\n      console.log(`To debug, run: kill -SIGUSR1 ${process.pid}`);\n      console.log('---');\n    }\n\n    mainMaster();\n    if (env.forkCount > 0) {\n      return;\n    }\n  }\n  mainWorker();\n};\n\n\nif (env.port) {\n  run();\n} else {\n  // random port support\n  let tmpServer = http.createServer();\n  tmpServer.listen(0).on('listening', function() {\n    env.port = tmpServer.address().port.toString();\n    tmpServer.close();\n  }).on('close', run);\n}\n"]}