{"version":3,"sources":["../src/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport cluster from 'cluster';\nimport env from './env';\nimport expressApp from './express-app';\nimport http from 'http';\nimport log from './log';\nimport makeLocalHandle from './handlers/local';\nimport makeProxyHandle from './handlers/proxy';\nimport os from 'os';\nimport pkg from '../package.json';\n\nlet heapdump;\nif (env.heartbeat.memThresholdRss && env.log.toDir) {\n  try {\n    // eslint-disable-next-line dependencies/no-unresolved, import/no-extraneous-dependencies\n    heapdump = require('heapdump');\n  } catch (_err) {\n  }\n}\nlet workerId = _.get(cluster, 'worker.id', 'M');\nlet httpServer;\n\n// EVENT HANDLERS\n\nlet writeHeapSnapshot = function(logObj) {\n  if (!heapdump) {\n    return;\n  }\n\n  let filename = `${pkg.name}.${workerId}.uncaughtException.heapsnapshot`;\n  logObj.heapsnapshot = {\n    filename\n  };\n  heapdump.writeSnapshot(`${env.log.toDir}/${filename}`);\n};\n\nlet maybeWriteHeapSnapshot = function(logObj) {\n  if (!heapdump) {\n    return;\n  }\n\n  let thresholdRss = env.heartbeat.memThresholdRss;\n  let currentRss;\n  currentRss = logObj.process.memoryUsage.rss / (1024 * 1024);\n  if (currentRss <= thresholdRss) {\n    return false;\n  }\n  let filename = `${pkg.name}.${workerId}.${thresholdRss}MB.heapsnapshot`;\n  logObj.heapsnapshot = {\n    currentRss,\n    thresholdRss,\n    filename\n  };\n  heapdump.writeSnapshot(`${env.log.toDir}/${filename}`);\n  thresholdRss = thresholdRss + 25;\n  return true;\n};\n\nlet onUncaughtException = function(err) {\n  let exceptionLog = {\n    tag_uncaught_exception: true,\n    err: {\n      code: err.code,\n      message: err.message,\n      stack: err.stack\n    }\n  };\n\n  console.error(err);\n  console.error(err.stack);\n  try {\n    writeHeapSnapshot(exceptionLog);\n    log.fatal(exceptionLog, 'Uncaught exception');\n  } catch (e) {\n    console.error(e);\n  }\n\n  if (cluster.isMaster || !httpServer) {\n    // eslint-disable-next-line no-process-exit\n    process.exit(1);\n  } else {\n    httpServer.close(function() {\n    // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    });\n    setTimeout(function() {\n      log.error('HTTP server is stalling upon closing down. Forcefully terminating.');\n      // eslint-disable-next-line no-process-exit\n      process.exit(1);\n    });\n  }\n};\n\nlet onHeartbeat = (function() {\n  return function() {\n    let level = 'info';\n    let heartbeatLog = {\n      tag_server_heartbeat: true,\n      process: {\n        memoryUsage: process.memoryUsage(),\n        uptime: process.uptime()\n      },\n      os: {\n        loadavg: os.loadavg(),\n        totalmem: os.totalmem(),\n        freemem: os.freemem()\n      }\n    };\n\n    if (maybeWriteHeapSnapshot(heartbeatLog)) {\n      level = 'warn';\n    }\n\n    log[level](heartbeatLog, 'Heartbeat');\n  };\n})();\n\n// MAIN\n\nlet mainWorker = async function() {\n  process.on('uncaughtException', onUncaughtException);\n\n  let app = expressApp.create({\n    address: env.address,\n    port: env.port,\n    env,\n    log\n  });\n\n  // [{awsFunctionName, isProd, locations, mainFun, pkg}]\n  let lambdas = await env.hooks.findLambdas({env});\n\n  _.forEach(lambdas, function(lambda) {\n    let makeHandle = makeProxyHandle;\n\n    makeHandle = makeLocalHandle;\n    if (lambda.isProd) {\n      makeHandle = makeProxyHandle;\n    }\n    lambda.handle = makeHandle({app, lambda});\n  });\n\n  await expressApp.loadLambdas({app, lambdas});\n\n  http.globalAgent.maxSockets = Infinity;\n  httpServer = http.createServer(app);\n\n  httpServer.listen(env.port, env.address);\n\n  if (!cluster.isMaster) {\n    return;\n  }\n\n  log.info({\n    tag_server_event: 'listening'\n  }, 'Non-worker listening');\n\n  if (env.heartbeat.interval > 1) {\n    setInterval(onHeartbeat, env.heartbeat.interval * 60 * 1000);\n  }\n};\n\nlet onSimpleEvent = function(event, worker) {\n  let level = 'info';\n  // eslint-disable-next-line fp/no-arguments\n  let args = Array.prototype.slice.call(arguments, 1);\n\n  if (worker instanceof cluster.Worker) {\n    args.shift();\n  }\n\n  args = args.length ? ` ${JSON.stringify(args)}` : '';\n\n  if (event === 'error') {\n    level = 'error';\n  }\n  // eslint-disable-next-line fp/no-arguments\n  if (event === 'exit' && arguments[0] !== 0) {\n    level = 'error';\n  }\n\n  log[level]({\n    tagServerWorker: true,\n    tag_server_event: event,\n    workerId: worker.id\n  }, `Worker ${event}${args}`);\n};\n\nlet mainMaster = function() {\n  let startupLog = {\n    tag_server_event: 'starting',\n    env\n  };\n\n  // Exit when pipe is closed\n  if (env.isProd) {\n    process.stdin.resume();\n    process.stdin.on('close', function() {\n      // eslint-disable-next-line fp/no-arguments\n      _.curry(onSimpleEvent)('stdin_close')(arguments);\n      // eslint-disable-next-line no-process-exit\n      process.exit(0);\n    });\n  }\n\n  process.on('uncaughtException', onUncaughtException);\n  cluster\n    .on('fork', _.curry(onSimpleEvent)('fork'))\n    .on('online', _.curry(onSimpleEvent)('online'))\n    .on('listening', _.curry(onSimpleEvent)('listening'))\n    .on('disconnect', _.curry(onSimpleEvent)('disconnect'))\n    .on('exit', _.curry(onSimpleEvent)('exit'))\n    .on('exit', function(worker, code, _signal) {\n      if (code === 0) {\n        return;\n      }\n\n      // Replace event\n      let event = 'replace';\n      let newWorker = cluster.fork();\n      let args = ` [${newWorker.id}]`;\n\n      log.info({\n        tagServerWorker: true,\n        tag_server_event: event,\n        workerId: worker.id\n      }, `Worker ${event}${args}`);\n    });\n\n  if (env.isProd) {\n    startupLog.process = {\n      arch: process.arch,\n      env: process.env,\n      memoryUsage: process.memoryUsage(),\n      platform: process.platform,\n      versions: process.versions,\n      uptime: process.uptime()\n    };\n    startupLog.process.env.NODE_PATH =\n      _.compact(_.uniq(_.split(startupLog.process.env.NODE_PATH, ':')));\n\n    startupLog.os = {\n      arch: os.arch(),\n      cpus: os.cpus(),\n      freemem: os.freemem(),\n      hostame: os.hostname(),\n      loadavg: os.loadavg(),\n      networkInterfaces: os.networkInterfaces(),\n      platform: os.platform(),\n      release: os.release(),\n      totalmem: os.totalmem(),\n      type: os.type(),\n      uptime: os.uptime()\n    };\n  }\n\n  log.trace(startupLog, 'Starting');\n\n  _.forEach(_.range(0, env.forkCount), function() {\n    cluster.fork();\n  });\n};\n\n// RUN\n\nlet run = function() {\n  if (cluster.isMaster) {\n    console.log(`PID=${process.pid}`);\n    console.log(`PORT=${env.port}`);\n    console.log('---');\n\n    if (!env.isProd) {\n      console.log(`Started server on http://${env.address}:${env.port}`);\n      console.log('Press CTRL-C to stop');\n      console.log(`To debug, run: kill -SIGUSR1 ${process.pid}`);\n      console.log('---');\n    }\n\n    mainMaster();\n    if (env.forkCount > 0) {\n      return;\n    }\n  }\n  mainWorker();\n};\n\n\nif (env.port) {\n  run();\n} else {\n  // random port support\n  let tmpServer = http.createServer();\n  tmpServer.listen(0).on('listening', function() {\n    env.port = tmpServer.address().port.toString();\n    tmpServer.close();\n  }).on('close', run);\n}\n"]}