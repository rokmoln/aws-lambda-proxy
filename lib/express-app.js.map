{"version":3,"sources":["../src/express-app.js"],"names":[],"mappings":"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","file":"express-app.js","sourcesContent":["import _ from 'lodash-firecloud';\nimport _express from 'express';\nimport bodyParser from 'body-parser';\nimport compression from 'compression';\nimport env from './env';\nimport url from 'url';\n\nexport let express = _express;\n\nexport let create = function(options) {\n  let app = express();\n\n  app.disable('x-powered-by');\n  app.disable('etag');\n  app.enable('trust proxy');\n  app.use(compression());\n  app.use(bodyParser.raw({type: '*/*'}));\n\n  app.env = options.env;\n  app.log = options.log;\n\n  app.use(function(req, _res, next) {\n    // bodyParser return {} if no body\n    if (_.isEmpty(req.body)) {\n      delete req.body;\n    }\n\n    if (req.path === '/health') {\n      return next();\n    }\n    let slimReq = _.omit(req, [\n      '_parsedUrl',\n      '_readableState',\n      'client',\n      'connection',\n      'host',\n      'res',\n      'socket'\n    ]);\n    if (slimReq.body instanceof Buffer) {\n      slimReq.body = slimReq.body.toString();\n    }\n    options.log.debug({req: slimReq});\n    next();\n  });\n\n  app.get('/health', function(_req, res, _next) {\n    res.sendStatus(200);\n  });\n\n  // eslint-disable-next-line max-params\n  app.use(function(err, _req, res, _next) {\n    if (_.isNil(err)) {\n      return res.sendStatus(404);\n    }\n    options.log.error({err});\n    return res.sendStatus(500);\n  });\n\n  return app;\n};\n\nexport let loadLambdas = async function({app, lambdas}) {\n  let lambdaLocations = [];\n  let arnPrefix = [\n    'arn',\n    'aws',\n    'lambda',\n    _.defaultTo(process.env.AWS_REGION, 'zz-central-1'),\n    process.env.AWS_ACCOUNT_ID,\n    'function'\n  ].join(':');\n\n  _.forEach(lambdas, function(lambda) {\n    let {\n      awsFunctionName,\n      locations\n    } = lambda;\n\n    _.forEach(locations, function(location) {\n      // location = location.replace(/{([^}]+)\\+}/g, ':$1');\n      location = _.replace(location, /{([^}]+)\\+}/g, '*');\n      location = `${location}$`;\n      let ctx = {\n        awsRequestId: '0',\n        getRemainingTimeInMillis: function() {\n          return 60 * 1000; // FIXME\n        },\n        functionName: awsFunctionName,\n        functionVersion: '$LOCAL',\n        invokedFunctionArn: `${arnPrefix}:${awsFunctionName}:$LOCAL`\n      };\n\n      lambdaLocations.push({\n        ctx,\n        lambda,\n        location\n      });\n    });\n  });\n\n  Promise.all(_.map(lambdaLocations, async function({ctx, lambda, location}) {\n    let route = {\n      ctx,\n      lambda,\n      location,\n      expressRouter: app\n    };\n\n    await env.hooks.preRouteSetup({env, route});\n    route.expressRouter.all(route.location, exports.middleware(route));\n  }));\n};\n\nexport let middleware = function(route) {\n  route = _.cloneDeep(route);\n\n  return async function(req, res, _next) {\n    let {\n      pathname,\n      query\n    } = url.parse(req.originalUrl, true);\n\n    let e = {\n      httpMethod: req.method,\n      path: pathname,\n      queryStringParameters: query,\n      headers: req.headers,\n      body: req.body ? req.body.toString() : undefined,\n      stageVariables: {},\n      requestContext: {\n        accountId: process.env.AWS_ACCOUNT_ID,\n        stage: 'local',\n        httpMethod: req.method\n      }\n    };\n\n    await env.hooks.preHandle({e, env, route, req, res});\n\n    route.lambda.handle(e, route.ctx, function(err, lambdaRes) {\n      if (err) {\n        req.app.log.error({err});\n        return res.status(500);\n      }\n      res.status(lambdaRes.statusCode);\n      res.set(lambdaRes.headers);\n      res.send(lambdaRes.body);\n    });\n  };\n};\n\nexport default exports;\n"]}